pipeline {

    agent any

    environment{
        PATH="/opt/apache-maven-3.6.3/bin:$PATH"
        def controllerServer="18.236.72.3"
        def qaServer="52.11.213.8"
    }

    stages{


        stage('Git Checkout') {
            steps{
                // Get some code from a GitHub repository
                git changelog: false, poll: false, url: 'https://github.com/akhil7000/DevopsBasics.git'
            }
        }

        stage('Build') {
            steps{
                sh '"$MVN_HOME/bin/mvn" test install'
            }
        }

        stage('Create hosts file'){
            steps{
                input {
                    message 'Enter IP of QA server'
                    parameters {
                        string defaultValue: '52.11.213.8', description: '', name: 'qaServer', trim: true
                    }
                }

                sh 'rm -rf hosts'
                sh 'touch hosts'
                sh 'echo \"localhost\" >> hosts'
                sh 'echo \"[QA]\" >> hosts'
                sh "echo \"ec2-user@${qaServer}\" >> hosts"
                sh 'cat hosts'
            }
        }

        stage('Deploy on - Controller & QA Server'){
            steps{
                sshPublisher(publishers:
                        [sshPublisherDesc(configName: 'Application-Server', transfers:
                                [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'ansible-playbook -i hosts remoteplaybook.yml --ssh-common-args=\'-o StrictHostKeyChecking=no\'',
                                        execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+',
                                        remoteDirectory: '.', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'webapp/target/webapp.war, Dockerfile, hosts, remoteplaybook.yml'
                                )]
                                , usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)
                        ])
                echo "Deployed on Controller node : ${controllerServer}:8080/webapp"
                echo "Deployed on QA node : ${qaServer}:8080/webapp"
            }
        }

        stage('Cleanup'){
            steps{
                cleanWs()
            }
        }
    }
}
